{"version":3,"sources":["components/header.js","components/select.js","components/input_form.js","components/chart.js","actions.js","components/chosen_action.js","App.js","serviceWorker.js","index.js"],"names":["Heading","react_default","a","createElement","className","getBudget","Select","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","actions","getActions","action_types","getTypesAction","handleChange","bind","assertThisInitialized","event","onSelectItem","currentTarget","_this2","onChange","id","map","item","index","key","concat","label","indexOf","React","Component","InputForm","handleClick","selected","onItemChange","components_select","GoogleChart","items","getState","actionTypes","getActionTypes","array","push","unshift","role","sourceColumn","type","calc","data","drawChart","style","display","maxWidth","index_esm","width","height","chartType","loader","options","legend","position","chartArea","hAxis","title","minValue","vAxis","ChosenAction","getChosenActions","handleDelete","preventDefault","onItemDelete","target","getAttribute","href","data-item","onClick","getActionTypeName","budget","b","c","typesAction","name","code","actionsTypes","0","1","2","chosenActions","price","action_id","deductFromBudget","addToBudget","App","changeItem","deleteItem","action","newStateKey","oldValue","newValue","Number","setState","splice","removeChosenAction","header","input_form","chart","chosen_action","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5765d578.chunk.js","sourcesContent":["import React from 'react';\nimport { getBudget } from '../App';\n\nconst Heading = () => {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <header className=\"App-header\">\n            <h1>\n            Бюджет: { getBudget() } EUR\n            </h1>\n          </header>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Heading;\n","import React from 'react';\nimport { getActions, getTypesAction } from '../App';\n\nclass Select extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n    this.actions = getActions();\n    this.action_types = getTypesAction();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.onSelectItem(event.currentTarget.value);\n  }\n\n  render() {\n    return (\n        <select onChange={this.handleChange} value={this.state.value} className=\"form-control\" id=\"enterCode\">\n          <option>Выбрать действие</option>\n\n          { this.action_types.map((item, index) => (\n          <optgroup key={`list-item-${index}`} label={item['name']}>\n            { item['actions'].map((item, index) => (\n\n              <option key={`list-item-${index}`} value={this.actions.indexOf(this.actions[item])}>{ this.actions[item]['name'] } - {this.actions[item]['price']} EUR </option>\n            ))}\n          </optgroup>\n          ))}\n\n        </select>\n      );\n  }\n};\n\nexport default Select;","import React from 'react';\nimport Select from './select';\n\nclass InputForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(selected) {\n    this.props.onItemChange(selected);\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm\"></div>\n          <div className=\"col-sm\">\n            <form>\n              <br/>\n              <div className=\"form-group\">\n                <Select onSelectItem={this.handleClick} />\n              </div>\n            </form>\n          </div>\n          <div className=\"col-sm\"></div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default InputForm;","import React from 'react';\nimport Chart from 'react-google-charts';\nimport { drawChart } from '../actions';\n\nconst GoogleChart = () => {\n  let items = drawChart()['data'];\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-sm\"></div>\n        <div className=\"col-sm\">\n          <div style={{ display: 'flex', maxWidth: 900 }}>\n            <Chart\n              width={300}\n              height={300}\n              chartType=\"BarChart\"\n              loader={<div>Loading Chart</div>}\n              data={items}\n              options={{\n                legend: { position: 'none' },\n                chartArea: { width: '50%' },\n                hAxis: {\n                  title: 'Действия',\n                  minValue: 0,\n                },\n                vAxis: {\n                  title: '',\n                },\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default GoogleChart;\n","import { getState, getActionTypes } from './App';\n\nexport const drawChart = () => {\n\n  let state = getState();\n  let actionTypes = getActionTypes();\n  let array = [];\n  array = []\n  for (var key in actionTypes){\n    array.push([actionTypes[key][0], state[key], actionTypes[key][2], state[key]])\n  }\n\n  array.unshift([\n      'Element',\n      'Density',\n      { role: 'style' },\n      {\n        sourceColumn: 0,\n        role: 'annotation',\n        type: 'string',\n        calc: 'stringify',\n      },\n    ])\n\n  return {\n    data: array\n  }\n}\n\n","import React from 'react';\nimport { getChosenActions, getBudget, getActions, getActionTypeName } from '../App';\n\nclass ChosenAction extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.items = getChosenActions();\n    this.actions = getActions();\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleDelete(event) {\n    event.preventDefault()\n    this.props.onItemDelete(event.target.getAttribute('data-item'));\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm\"></div>\n          <div className=\"col-sm-5\">\n            <ol className='list-group-flush align_left'>\n              <li className='list-group-item'>\n                <strong>Начальный бюджет: 1000 EUR</strong>\n              </li>\n             { this.items.map((item, index) => (\n              <li className='list-group-item' key={`list-item-${index}`}>{index + 1}.\n                &nbsp;\n                &nbsp;\n                { item['name'] }: {item['price']} EUR\n                &nbsp;\n                <a href='' data-item={this.actions.indexOf(item)} onClick={this.handleDelete}>x</a>\n                <br/>\n                <small><i>{getActionTypeName(this.actions.indexOf(item))}</i></small>\n              </li>\n              ))}\n              <li className='list-group-item'>Осталось: { getBudget() } EUR</li>\n            </ol>\n          </div>\n          <div className=\"col-sm\"></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChosenAction;\n","import React from 'react';\nimport Heading from './components/header';\nimport InputForm from './components/input_form';\nimport GoogleChart from './components/chart';\nimport ChosenAction from './components/chosen_action';\nimport './App.css';\n\nlet budget = 1000;\nlet state = { a: 0, b: 0, c: 0  };\nlet actionTypes = { a: ['Типовой совок бедный', 2, 'silver'], b: ['Создают барьеры, риск гетто, сегрегации', 1, 'gold'], c: ['Понты - все как у людей', 3, '#b87333'] };\nlet typesAction = [{ name: 'Жилье', code: 'a', actions: [0]}, {name: 'Транспорт', code: 'b', actions: [1]}, {name: 'Благоустройство', code: 'c', actions: [2]}];\nlet actionsTypes = { 0: 'a', 1: 'b', 2: 'c' };\nlet chosenActions = []\nlet actions = [{ name: '16 этажный дом в сов р-не', price: 100, value: 1}, { name: 'Цены на транспорт повысить для всех', price: 50, value: 2 }, { name: 'Реконстр. Площади - клумба', price: 200, value: 3 }]\n\nexport const getState = () => state;\nexport const getBudget = () => budget;\nexport const getActions = () => actions;\nexport const getActionTypes = () => actionTypes;\nexport const getTypesAction = () => typesAction;\nexport const getChosenActions = () => chosenActions;\nexport const getActionTypeName = (action_id) => {\n  let actionType = actionsTypes[action_id]\n  return actionTypes[actionType][0]\n}\n\nexport const updateState = newState => {\n  let newStateKey = actionsTypes[newState]\n  let oldValue = state[newStateKey]\n  state[newStateKey] = Number(oldValue) + Number(newState);\n};\n\nexport const addChosenActions = action => {\n  deductFromBudget(actions[action]['price'])\n  chosenActions.push(actions[action]);\n};\n\nexport const removeChosenAction = action => {\n  addToBudget(actions[action]['price'])\n  // remove action from chosenActions\n  var index = chosenActions.indexOf(actions[action]);\n  if (index !== -1) chosenActions.splice(index, 1);\n};\n\nexport const deductFromBudget = price => {\n  budget -= price;\n};\n\nexport const addToBudget = price => {\n  budget += price;\n};\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { data: state };\n\n    this.changeItem = this.changeItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n  }\n\n  changeItem(item) {\n\n    let newStateKey = actionsTypes[item]\n    let oldValue = state[newStateKey]\n    let newValue = actions[item]['value']\n\n    state[newStateKey] = Number(oldValue) + Number(newValue);\n\n    this.setState({data: state});\n\n    addChosenActions(item)\n  }\n\n  deleteItem(item) {\n\n    let newStateKey = actionsTypes[item]\n    let oldValue = state[newStateKey]\n    let newValue = actions[item]['value']\n    state[newStateKey] = Number(oldValue) - Number(newValue);\n\n    this.setState({data: state});\n\n    removeChosenAction(item)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Heading />\n        <InputForm onItemChange={this.changeItem} />\n        <GoogleChart />\n        <ChosenAction onItemDelete={this.deleteItem} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}